#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyCodex
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Core")]
	public partial class CoreDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Inserttbl_Chapter(tbl_Chapter instance);
    partial void Updatetbl_Chapter(tbl_Chapter instance);
    partial void Deletetbl_Chapter(tbl_Chapter instance);
    partial void Inserttbl_Tome(tbl_Tome instance);
    partial void Updatetbl_Tome(tbl_Tome instance);
    partial void Deletetbl_Tome(tbl_Tome instance);
    partial void Inserttbl_Page(tbl_Page instance);
    partial void Updatetbl_Page(tbl_Page instance);
    partial void Deletetbl_Page(tbl_Page instance);
    partial void Inserttbl_History(tbl_History instance);
    partial void Updatetbl_History(tbl_History instance);
    partial void Deletetbl_History(tbl_History instance);
    partial void Inserttbl_Keyword(tbl_Keyword instance);
    partial void Updatetbl_Keyword(tbl_Keyword instance);
    partial void Deletetbl_Keyword(tbl_Keyword instance);
    partial void Inserttbl_note(tbl_note instance);
    partial void Updatetbl_note(tbl_note instance);
    partial void Deletetbl_note(tbl_note instance);
    partial void Inserttbl_Book(tbl_Book instance);
    partial void Updatetbl_Book(tbl_Book instance);
    partial void Deletetbl_Book(tbl_Book instance);
    #endregion
		
		public CoreDBDataContext() : 
				base(global::MyCodex.Properties.Settings.Default.CoreConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public CoreDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CoreDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CoreDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CoreDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tbl_Chapter> tbl_Chapters
		{
			get
			{
				return this.GetTable<tbl_Chapter>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Tome> tbl_Tomes
		{
			get
			{
				return this.GetTable<tbl_Tome>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Page> tbl_Pages
		{
			get
			{
				return this.GetTable<tbl_Page>();
			}
		}
		
		public System.Data.Linq.Table<tbl_History> tbl_Histories
		{
			get
			{
				return this.GetTable<tbl_History>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Keyword> tbl_Keywords
		{
			get
			{
				return this.GetTable<tbl_Keyword>();
			}
		}
		
		public System.Data.Linq.Table<tbl_note> tbl_notes
		{
			get
			{
				return this.GetTable<tbl_note>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Requirement> tbl_Requirements
		{
			get
			{
				return this.GetTable<tbl_Requirement>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Book> tbl_Books
		{
			get
			{
				return this.GetTable<tbl_Book>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Chapter")]
	public partial class tbl_Chapter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CID;
		
		private string _Cname;
		
		private System.Nullable<int> _BID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCIDChanging(int value);
    partial void OnCIDChanged();
    partial void OnCnameChanging(string value);
    partial void OnCnameChanged();
    partial void OnBIDChanging(System.Nullable<int> value);
    partial void OnBIDChanged();
    #endregion
		
		public tbl_Chapter()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CID
		{
			get
			{
				return this._CID;
			}
			set
			{
				if ((this._CID != value))
				{
					this.OnCIDChanging(value);
					this.SendPropertyChanging();
					this._CID = value;
					this.SendPropertyChanged("CID");
					this.OnCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cname", DbType="VarChar(250)")]
		public string Cname
		{
			get
			{
				return this._Cname;
			}
			set
			{
				if ((this._Cname != value))
				{
					this.OnCnameChanging(value);
					this.SendPropertyChanging();
					this._Cname = value;
					this.SendPropertyChanged("Cname");
					this.OnCnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BID", DbType="Int")]
		public System.Nullable<int> BID
		{
			get
			{
				return this._BID;
			}
			set
			{
				if ((this._BID != value))
				{
					this.OnBIDChanging(value);
					this.SendPropertyChanging();
					this._BID = value;
					this.SendPropertyChanged("BID");
					this.OnBIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Tomes")]
	public partial class tbl_Tome : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TID;
		
		private string _TName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTIDChanging(int value);
    partial void OnTIDChanged();
    partial void OnTNameChanging(string value);
    partial void OnTNameChanged();
    #endregion
		
		public tbl_Tome()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TID
		{
			get
			{
				return this._TID;
			}
			set
			{
				if ((this._TID != value))
				{
					this.OnTIDChanging(value);
					this.SendPropertyChanging();
					this._TID = value;
					this.SendPropertyChanged("TID");
					this.OnTIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TName", DbType="VarChar(250)")]
		public string TName
		{
			get
			{
				return this._TName;
			}
			set
			{
				if ((this._TName != value))
				{
					this.OnTNameChanging(value);
					this.SendPropertyChanging();
					this._TName = value;
					this.SendPropertyChanged("TName");
					this.OnTNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Pages")]
	public partial class tbl_Page : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PID;
		
		private System.Nullable<int> _CID;
		
		private string _Title;
		
		private string _Status;
		
		private string _Code;
		
		private System.Nullable<System.DateTime> _LastModified;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPIDChanging(int value);
    partial void OnPIDChanged();
    partial void OnCIDChanging(System.Nullable<int> value);
    partial void OnCIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnLastModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedChanged();
    #endregion
		
		public tbl_Page()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PID
		{
			get
			{
				return this._PID;
			}
			set
			{
				if ((this._PID != value))
				{
					this.OnPIDChanging(value);
					this.SendPropertyChanging();
					this._PID = value;
					this.SendPropertyChanged("PID");
					this.OnPIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CID", DbType="Int")]
		public System.Nullable<int> CID
		{
			get
			{
				return this._CID;
			}
			set
			{
				if ((this._CID != value))
				{
					this.OnCIDChanging(value);
					this.SendPropertyChanging();
					this._CID = value;
					this.SendPropertyChanged("CID");
					this.OnCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(250)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(5000)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModified
		{
			get
			{
				return this._LastModified;
			}
			set
			{
				if ((this._LastModified != value))
				{
					this.OnLastModifiedChanging(value);
					this.SendPropertyChanging();
					this._LastModified = value;
					this.SendPropertyChanged("LastModified");
					this.OnLastModifiedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_History")]
	public partial class tbl_History : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EID;
		
		private System.Nullable<int> _PID;
		
		private string _eText;
		
		private System.Nullable<System.DateTime> _Created;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEIDChanging(int value);
    partial void OnEIDChanged();
    partial void OnPIDChanging(System.Nullable<int> value);
    partial void OnPIDChanged();
    partial void OneTextChanging(string value);
    partial void OneTextChanged();
    partial void OnCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedChanged();
    #endregion
		
		public tbl_History()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EID
		{
			get
			{
				return this._EID;
			}
			set
			{
				if ((this._EID != value))
				{
					this.OnEIDChanging(value);
					this.SendPropertyChanging();
					this._EID = value;
					this.SendPropertyChanged("EID");
					this.OnEIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PID", DbType="Int")]
		public System.Nullable<int> PID
		{
			get
			{
				return this._PID;
			}
			set
			{
				if ((this._PID != value))
				{
					this.OnPIDChanging(value);
					this.SendPropertyChanging();
					this._PID = value;
					this.SendPropertyChanged("PID");
					this.OnPIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eText", DbType="VarChar(500)")]
		public string eText
		{
			get
			{
				return this._eText;
			}
			set
			{
				if ((this._eText != value))
				{
					this.OneTextChanging(value);
					this.SendPropertyChanging();
					this._eText = value;
					this.SendPropertyChanged("eText");
					this.OneTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime")]
		public System.Nullable<System.DateTime> Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Keywords")]
	public partial class tbl_Keyword : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _KWID;
		
		private System.Nullable<int> _PID;
		
		private string _Word;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKWIDChanging(int value);
    partial void OnKWIDChanged();
    partial void OnPIDChanging(System.Nullable<int> value);
    partial void OnPIDChanged();
    partial void OnWordChanging(string value);
    partial void OnWordChanged();
    #endregion
		
		public tbl_Keyword()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KWID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int KWID
		{
			get
			{
				return this._KWID;
			}
			set
			{
				if ((this._KWID != value))
				{
					this.OnKWIDChanging(value);
					this.SendPropertyChanging();
					this._KWID = value;
					this.SendPropertyChanged("KWID");
					this.OnKWIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PID", DbType="Int")]
		public System.Nullable<int> PID
		{
			get
			{
				return this._PID;
			}
			set
			{
				if ((this._PID != value))
				{
					this.OnPIDChanging(value);
					this.SendPropertyChanging();
					this._PID = value;
					this.SendPropertyChanged("PID");
					this.OnPIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Word", DbType="VarChar(50)")]
		public string Word
		{
			get
			{
				return this._Word;
			}
			set
			{
				if ((this._Word != value))
				{
					this.OnWordChanging(value);
					this.SendPropertyChanging();
					this._Word = value;
					this.SendPropertyChanged("Word");
					this.OnWordChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_notes")]
	public partial class tbl_note : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _nid;
		
		private System.Nullable<int> _PID;
		
		private string _NoteText;
		
		private System.Nullable<System.DateTime> _Created;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnnidChanging(int value);
    partial void OnnidChanged();
    partial void OnPIDChanging(System.Nullable<int> value);
    partial void OnPIDChanged();
    partial void OnNoteTextChanging(string value);
    partial void OnNoteTextChanged();
    partial void OnCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedChanged();
    #endregion
		
		public tbl_note()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int nid
		{
			get
			{
				return this._nid;
			}
			set
			{
				if ((this._nid != value))
				{
					this.OnnidChanging(value);
					this.SendPropertyChanging();
					this._nid = value;
					this.SendPropertyChanged("nid");
					this.OnnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PID", DbType="Int")]
		public System.Nullable<int> PID
		{
			get
			{
				return this._PID;
			}
			set
			{
				if ((this._PID != value))
				{
					this.OnPIDChanging(value);
					this.SendPropertyChanging();
					this._PID = value;
					this.SendPropertyChanged("PID");
					this.OnPIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoteText", DbType="VarChar(500)")]
		public string NoteText
		{
			get
			{
				return this._NoteText;
			}
			set
			{
				if ((this._NoteText != value))
				{
					this.OnNoteTextChanging(value);
					this.SendPropertyChanging();
					this._NoteText = value;
					this.SendPropertyChanged("NoteText");
					this.OnNoteTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime")]
		public System.Nullable<System.DateTime> Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Requirements")]
	public partial class tbl_Requirement
	{
		
		private int _RID;
		
		private System.Nullable<int> _PID;
		
		private string _ReqText;
		
		public tbl_Requirement()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int RID
		{
			get
			{
				return this._RID;
			}
			set
			{
				if ((this._RID != value))
				{
					this._RID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PID", DbType="Int")]
		public System.Nullable<int> PID
		{
			get
			{
				return this._PID;
			}
			set
			{
				if ((this._PID != value))
				{
					this._PID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReqText", DbType="VarChar(250)")]
		public string ReqText
		{
			get
			{
				return this._ReqText;
			}
			set
			{
				if ((this._ReqText != value))
				{
					this._ReqText = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Books")]
	public partial class tbl_Book : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BID;
		
		private System.Nullable<int> _TID;
		
		private string _BName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBIDChanging(int value);
    partial void OnBIDChanged();
    partial void OnTIDChanging(System.Nullable<int> value);
    partial void OnTIDChanged();
    partial void OnBNameChanging(string value);
    partial void OnBNameChanged();
    #endregion
		
		public tbl_Book()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BID
		{
			get
			{
				return this._BID;
			}
			set
			{
				if ((this._BID != value))
				{
					this.OnBIDChanging(value);
					this.SendPropertyChanging();
					this._BID = value;
					this.SendPropertyChanged("BID");
					this.OnBIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TID", DbType="Int")]
		public System.Nullable<int> TID
		{
			get
			{
				return this._TID;
			}
			set
			{
				if ((this._TID != value))
				{
					this.OnTIDChanging(value);
					this.SendPropertyChanging();
					this._TID = value;
					this.SendPropertyChanged("TID");
					this.OnTIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BName", DbType="VarChar(250)")]
		public string BName
		{
			get
			{
				return this._BName;
			}
			set
			{
				if ((this._BName != value))
				{
					this.OnBNameChanging(value);
					this.SendPropertyChanging();
					this._BName = value;
					this.SendPropertyChanged("BName");
					this.OnBNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
